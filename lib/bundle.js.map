{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/cell.js","webpack:///./lib/dynamic_cell.js","webpack:///./lib/grid.js","webpack:///./lib/main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;;AAEA;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;AAIA;;AAEA;;;;;;;;;;;;ACpDA,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,oBAAoB,mBAAO,CAAC,6CAAgB;;;AAG5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,kBAAkB,cAAc;AAChC,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC,oBAAoB,iBAAiB;AACrC;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;AAIA;AACA,kBAAkB,cAAc;AAChC,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;AAIA;AACA,kBAAkB,cAAc;AAChC,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,4BAA4B;AAC9C,2DAA2D,wBAAwB;AACnF,+DAA+D,yBAAyB;AACxF;AACA;;AAEA;AACA;AACA;AACA,6CAA6C,0DAA0D;AACvG;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2EAA2E,oBAAoB;;AAE/F;AACA,sEAAsE,mBAAmB;AACzF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,cAAc;AAChC,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;AAIA;;;;;;;;;;;;ACrfA,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/main.js\");\n","const COLOR = {\n  2 : '#eaf1f4', 4 : '#d1e5f0', 8 : '#b5d7e8', 16 : '#9fcbe1', 32 : '#90c4dd', 64 : '#4c98c6',\n  128 : '#3581b9', 256 : '#2a73b2', 512 : '#144d8a', 1024 : '#164b86', 2048 : '#134984',\n  4096 : '#5106da', 8192 : '#6b23ef', 16384 : '#8549f3', 32768 : '#a37aef'\n};\n\n\n\n\nclass Cell{\n  constructor(ctx, value, width, height, pos, x, y){\n    this.ctx = ctx;\n    this.value = value;\n    this.width = width;\n    this.height = height;\n    this.pos = pos;\n    this.x = x;\n    this.y = y;\n  }\n\n  draw(){\n    if(this.value !== 0){\n      this.ctx.beginPath();\n      this.ctx.fillStyle = COLOR[this.value] ? COLOR[this.value] : '#ff80ff';\n      this.ctx.fillRect(this.x + 6, this.y + 6, this.width - 12, this.height - 12);\n      this.ctx.beginPath();\n      this.ctx.font = 'bold 25pt Courier';\n      this.ctx.fillStyle = 'black';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText(this.value, this.x + this.width / 2, this.y + 12 + this.height / 2);\n    }else{\n      this.ctx.beginPath();\n      this.ctx.fillStyle = 'white';\n      this.ctx.fillRect(this.x + 6, this.y + 6, this.width - 12, this.height - 12);\n      this.ctx.beginPath();\n    }\n  }\n\n\n\n\n\n}\n\nmodule.exports = Cell;\n","const COLOR = {\n  2 : '#eaf1f4', 4 : '#d1e5f0', 8 : '#b5d7e8', 16 : '#9fcbe1', 32 : '#90c4dd', 64 : '#4c98c6',\n  128 : '#3581b9', 256 : '#2a73b2', 512 : '#144d8a', 1024 : '#164b86', 2048 : '#134984',\n  4096 : '#5106da', 8192 : '#6b23ef', 16384 : '#8549f3', 32768 : '#a37aef'\n};\n\n\n\n\nclass DynamicCell{\n\n  constructor(value, ctx, x, y, width, height, endX, endY, collision = false, xSpeed = 0, ySpeed = 0, targetPos){\n    this.value = value;\n    this.ctx = ctx;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.endX = endX;\n    this.endY = endY;\n    this.collision = collision;\n    this.xSpeed = xSpeed * Math.floor(Math.abs(endX-x)/20);\n    this.ySpeed = ySpeed * Math.floor(Math.abs(endY-y)/20);\n    this.targetPos = targetPos;\n  }\n\n  draw(){\n    this.ctx.beginPath();\n    this.ctx.fillStyle = COLOR[this.value] ? COLOR[this.value] : '#ff80ff';\n    this.ctx.fillRect(this.x + 6, this.y + 6, this.width - 12, this.height - 12);\n\n    this.ctx.beginPath();\n    this.ctx.font = 'bold 25pt Courier';\n    this.ctx.fillStyle = 'black';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(this.value, this.x + this.width / 2, this.y + 12 + this.height / 2);\n    this.x += this.xSpeed;\n    this.y += this.ySpeed;\n  }\n\n  checkingCollision(){\n    if(this.x === this.endX && this.y === this.endY){\n      window.grid.updateGrid(this.targetPos, this);\n    }else{\n      this.draw();\n    }\n  }\n\n\n\n}\n\nmodule.exports = DynamicCell;\n","const Cell = require('./cell');\nconst DynamicCell = require('./dynamic_cell');\n\n\nclass Grid{\n  constructor(ctx){\n    this.score = 0;\n    this.scoreChanging = 0;\n    this.ctx = ctx;\n    this.cellsArray = [\n      [ 0, 0, 0, 0],\n      [ 0, 0, 0, 0],\n      [ 0, 0, 0, 0],\n      [ 0, 0, 0, 0]\n    ];\n\n    this.raf = null;\n    this.row = this.cellsArray.length;\n    this.column = this.cellsArray[0].length;\n    this.cellHeight = Math.floor(window.canvasHeight/this.row);\n    this.cellWidth = Math.floor(window.canvasWidth/this.column);\n    this.intervalFunction = this.intervalFunction.bind(this);\n    this.dynamic_cells = [];\n    this.initGrid();\n    this.drawGrid();\n    this.onMoving = false;\n    this.move = this.move.bind(this);\n    document.addEventListener('keydown', this.move );\n    this.firebaseCB = this.firebaseCB.bind(this);\n    firebase.database().ref('scores/').orderByChild(\"score\").limitToLast(5).on(\"child_added\", this.firebaseCB);\n    this.playerName = '';\n  }\n\n\n  initGrid(){\n    for(let i = 0; i < this.row; i++){\n      for(let j = 0; j < this.column; j++){\n        this.cellsArray[i][j] = new Cell(this.ctx, this.cellsArray[i][j], this.cellWidth, this.cellHeight, [i,j], j*this.cellWidth, i*this.cellHeight);\n      }\n    }\n  }\n\n\n  move(event){\n    if(event.keyCode === 37){\n      this.keyLeft();\n    }else if(event.keyCode === 38){\n      this.keyUp();\n    }else if(event.keyCode === 39){\n      this.keyRight();\n    }else if(event.keyCode === 40){\n      this.keyDown();\n    }\n  }\n\n  slideDown(columnIdx, columnArr){\n    let steps = 0;\n    let prevCellNum = 0;\n    let preEven = false;\n    let prevCellValue = null;\n    let add = 0;\n    for(let j = columnArr.length - 1; j >= 0; j--){\n      if(columnArr[j].value===0){\n        steps += 1;\n      }else{\n        if(steps !== 0 || prevCellValue){\n          if(prevCellValue && prevCellValue === columnArr[j].value && !preEven){\n            this.dynamic_cells.push(new DynamicCell(\n              columnArr[j].value,\n              this.ctx,\n              columnArr[j].x,\n              columnArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              columnArr[j + steps + 1 + add].x,\n              columnArr[j + steps + 1 + add].y,\n              !preEven,\n              0,\n              +1,\n              [j + steps + 1 + add, columnIdx]\n            ));\n            preEven = !preEven;\n            if(preEven){add += 1;}\n          }else{\n            this.dynamic_cells.push(new DynamicCell(\n              columnArr[j].value,\n              this.ctx,\n              columnArr[j].x,\n              columnArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              columnArr[j + steps + add].x,\n              columnArr[j + steps + add].y,\n              false,\n              0,\n              +1,\n              [j + steps + add, columnIdx]\n            ));\n            if(preEven){preEven = false;}\n          }\n          prevCellNum += 1;\n          prevCellValue = columnArr[j].value;\n          columnArr[j].value = 0;\n        }else{\n          prevCellNum += 1;\n          prevCellValue = columnArr[j].value;\n        }\n      }\n    }\n    return columnArr;\n  }\n\n\n  slideUp(columnIdx, columnArr){\n    let steps = 0;\n    let prevCellNum = 0;\n    let preEven = false;\n    let prevCellValue = null;\n    let add = 0;\n    for(let j = 0; j< columnArr.length; j++){\n      if(columnArr[j].value===0){\n        steps += 1;\n        }else{\n        if(steps !== 0 || prevCellValue){\n          if(prevCellValue && prevCellValue === columnArr[j].value && !preEven){\n            this.dynamic_cells.push(new DynamicCell(\n              columnArr[j].value,\n              this.ctx,\n              columnArr[j].x,\n              columnArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              columnArr[j-steps - 1 - add].x,\n              columnArr[j-steps - 1 - add].y,\n              !preEven,\n              0,\n              -1,\n              [j-steps -1-add, columnIdx]\n            ));\n            preEven = !preEven;\n            if(preEven){add += 1;}\n          }else{\n            this.dynamic_cells.push(new DynamicCell(\n              columnArr[j].value,\n              this.ctx,\n              columnArr[j].x,\n              columnArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              columnArr[j-steps - add].x,\n              columnArr[j-steps - add].y,\n              false,\n              0,\n              -1,\n              [j-steps -add, columnIdx]\n            ));\n            if(preEven){preEven = false;}\n          }\n          prevCellNum += 1;\n          prevCellValue = columnArr[j].value;\n          columnArr[j].value = 0;\n        }else{\n          prevCellNum += 1;\n          prevCellValue = columnArr[j].value;\n        }\n      }\n    }\n    return columnArr;\n  }\n\n\n\n\n  slideRight(rowIdx, rowArr){\n    let steps = 0;\n    let prevCellNum = 0;\n    let preEven = false;\n    let prevCellValue = null;\n    let add = 0;\n    for(let j = rowArr.length - 1; j >= 0; j--){\n      if(rowArr[j].value===0){\n        steps += 1;\n      }else{\n        if(steps !== 0 || prevCellValue){\n          if(prevCellValue && prevCellValue === rowArr[j].value && !preEven){\n            this.dynamic_cells.push(new DynamicCell(\n              rowArr[j].value,\n              this.ctx,\n              rowArr[j].x,\n              rowArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              rowArr[ j + steps + 1 + add].x,\n              rowArr[ j + steps + 1 + add].y,\n              !preEven,\n              +1,\n              0,\n              [rowIdx, j + steps + 1 + add]\n            ));\n            preEven = !preEven;\n            if(preEven){add += 1;}\n          }else{\n            this.dynamic_cells.push(new DynamicCell(\n              rowArr[j].value,\n              this.ctx,\n              rowArr[j].x,\n              rowArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              rowArr[j+steps+add].x,\n              rowArr[j+steps+add].y,\n              false,\n              +1,\n              0,\n              [rowIdx, j+steps + add]\n            ));\n            if(preEven){preEven = false;}\n          }\n          prevCellNum += 1;\n          prevCellValue = rowArr[j].value;\n          rowArr[j].value = 0;\n        }else{\n          prevCellNum += 1;\n          prevCellValue = rowArr[j].value;\n        }\n      }\n    }\n    return rowArr;\n  }\n\n  slideLeft(rowIdx, rowArr){\n    let steps = 0;\n    let prevCellNum = 0;\n    let preEven = false;\n    let prevCellValue = null;\n    let add = 0;\n    for(let j = 0; j< rowArr.length; j++){\n      if(rowArr[j].value === 0){\n        steps += 1;\n      }else{\n        if(steps !== 0 || prevCellValue){\n          if(prevCellValue && prevCellValue === rowArr[j].value && !preEven){\n            this.dynamic_cells.push(new DynamicCell(\n              rowArr[j].value,\n              this.ctx,\n              rowArr[j].x,\n              rowArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              rowArr[j-steps -1 - add].x,\n              rowArr[j-steps -1 - add].y,\n              !preEven,\n              -1,\n              0,\n              [rowIdx, j-steps -1 - add]\n            ));\n            preEven = !preEven;\n            if(preEven){add += 1;}\n          }else{\n            this.dynamic_cells.push(new DynamicCell(\n              rowArr[j].value,\n              this.ctx,\n              rowArr[j].x,\n              rowArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              rowArr[j-steps - add].x,\n              rowArr[j-steps - add].y,\n              false,\n              -1,\n              0,\n              [rowIdx, j - steps - add]\n            ));\n            if(preEven){preEven = false;}\n          }\n          prevCellNum += 1;\n          prevCellValue = rowArr[j].value;\n          rowArr[j].value = 0;\n        }else{\n          prevCellNum += 1;\n          prevCellValue = rowArr[j].value;\n        }\n      }\n    }\n    return rowArr;\n  }\n\n\n\n  addRandom(){\n    document.addEventListener('keydown', this.move );\n    let options = [];\n    for(let i = 0; i < this.row; i++){\n      for(let j = 0; j < this.column; j++){\n        if(this.cellsArray[i][j].value===0){\n          options.push({r: i, c: j});\n        }\n      }\n    }\n    let position;\n    if(options.length > 0){\n      position = options[Math.floor(Math.random() * options.length)];\n    }\n\n    this.cellsArray[position.r][position.c] = Math.random() > 0.5 ?\n      new Cell(this.ctx, 2, this.cellWidth, this.cellHeight, [position.r, position.c], position.c*this.cellWidth, position.r*this.cellHeight) :\n      new Cell(this.ctx, 4, this.cellWidth, this.cellHeight, [position.r, position.c], position.c*this.cellWidth, position.r*this.cellHeight);\n    this.onMoving = false;\n  }\n\n\n  updateGrid(pos, DyCell){\n    if(DyCell.collision){\n      this.cellsArray[pos[0]][pos[1]].value = DyCell.value * 2;\n    }else{\n      this.cellsArray[pos[0]][pos[1]].value = DyCell.value;\n    }\n    const idx = this.dynamic_cells.findIndex(cell => cell.targetPos[0] === pos[0] && cell.targetPos[1] === pos[1]);\n    this.dynamic_cells = this.dynamic_cells.slice(0,idx).concat(this.dynamic_cells.slice(idx + 1));\n  }\n\n\n\n  drawGrid(){\n    for(let i = 0; i < this.row; i++){\n      for(let j = 0; j < this.column; j++){\n        this.ctx.beginPath();\n        this.ctx.lineWidth=\"12\";\n        this.ctx.strokeStyle= \"#010329\";\n        this.ctx.rect(j*this.cellWidth, i*this.cellHeight, this.cellWidth, this.cellHeight);\n        this.ctx.stroke();\n\n        this.cellsArray[i][j].draw();\n      }\n    }\n  }\n\n\n\n  keyUp(){\n    for(let j = 0; j< this.column; j++){\n      let arrU = [this.cellsArray[0][j], this.cellsArray[1][j], this.cellsArray[2][j], this.cellsArray[3][j]];\n      this.slideUp(j, arrU);\n      for(let i = 0; i < this.row; i++){\n        this.cellsArray[i][j] = arrU[i];\n      }\n    }\n    this.dynamic_cells.forEach( cell => {\n      cell.checkingCollision();\n    });\n    if(this.dynamic_cells.length !== 0){\n      this.onMoving = true;\n      document.removeEventListener('keydown', this.move );\n    }\n  }\n\n  keyDown(){\n    for(let j = 0; j< this.column; j++){\n      let arrU = [this.cellsArray[0][j], this.cellsArray[1][j], this.cellsArray[2][j], this.cellsArray[3][j]];\n      this.slideDown(j, arrU);\n      for(let i = 0; i < this.row; i++){\n        this.cellsArray[i][j] = arrU[i];\n      }\n    }\n    this.dynamic_cells.forEach( cell => {\n      cell.checkingCollision();\n    });\n    if(this.dynamic_cells.length !== 0){\n      this.onMoving = true;\n      document.removeEventListener('keydown', this.move );\n    }\n  }\n\n  keyLeft(){\n    for(let i = 0; i< this.row; i++){\n      this.slideLeft(i, this.cellsArray[i]);\n    }\n    this.dynamic_cells.forEach( cell => {\n      cell.checkingCollision();\n    });\n    if(this.dynamic_cells.length !== 0){\n      this.onMoving = true;\n      document.removeEventListener('keydown', this.move );\n    }\n  }\n\n\n  keyRight(){\n    for(let i = 0; i< this.row; i++){\n      this.slideRight(i, this.cellsArray[i]);\n    }\n    this.dynamic_cells.forEach( cell => {\n      cell.checkingCollision();\n    });\n    if(this.dynamic_cells.length !== 0){\n      this.onMoving = true;\n      document.removeEventListener('keydown', this.move );\n    }\n  }\n\n\n\n  gameOver(){\n    for(let i = 0; i < this.row; i++){\n      for(let j = 0; j < this.column; j ++){\n        if(this.cellsArray[i][j].value === 0){\n          return false;\n        }\n        if(i != this.row-1 && this.cellsArray[i][j].value === this.cellsArray[i+1][j].value){\n          return false;\n        }\n        if(j != this.column-1 && this.cellsArray[i][j].value === this.cellsArray[i][j+1].value){\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  firebaseCB(response){\n    window.scoreArr.push(response.val());\n    window.scoreArr.sort((a,b) => (b.score - a.score));\n    window.scoreArr = window.scoreArr.slice(0,5);\n    for(let i = 0; i < window.scoreArr.length; i++){\n      document.getElementsByTagName(\"b\")[i].innerHTML = `${window.scoreArr[i].name}`;\n      document.getElementsByTagName(\"small\")[i].innerHTML = `${window.scoreArr[i].score}`;\n    }\n  }\n\n  updateFirebase(e){\n    e.preventDefault();\n    const score = window.grid.score;\n    firebase.database().ref('scores/').push({score: score, name: e.target.querySelector('input').value});\n    document.getElementsByTagName(\"form\")[0].reset();\n    document.getElementsByTagName(\"form\")[0].setAttribute(\"style\", \"display: none\");\n  }\n\n\n  intervalFunction(){\n    this.raf = requestAnimationFrame(this.intervalFunction);\n    this.ctx.clearRect(0,0,400,400);\n    this.drawGrid();\n    this.dynamic_cells.forEach( cell => {\n      cell.checkingCollision();\n    });\n    if(this.dynamic_cells.length === 0 && this.onMoving){\n      this.addRandom();\n    }\n    document.getElementsByTagName('span')[0].innerHTML = `<span> score : ${this.highestScore()}</span>`;\n\n    if(this.scoreChanging > 0){\n      document.getElementsByTagName('strong')[0].innerHTML = `<p> + ${this.scoreChanging}</p>`;\n    }\n\n    if(this.gameOver() && this.dynamic_cells.length === 0){\n      document.removeEventListener('keydown', this.move );\n      cancelAnimationFrame(this.raf);\n      this.gameOverPage();\n    }\n  }\n\n  resetGrid(){\n    document.removeEventListener('keydown', this.move );\n    window.scoreArr = [];\n    cancelAnimationFrame(this.raf);\n    this.ctx.clearRect(0,0,400,400);\n  }\n\n  highestScore(){\n    const s = this.score;\n    for(let i = 0; i < this.row; i++){\n      for(let j = 0; j < this.column; j++){\n        if(this.cellsArray[i][j].value >= this.score){\n          this.score = this.cellsArray[i][j].value;\n        }\n      }\n    }\n    this.scoreChanging = this.score - s;\n    return this.score;\n  }\n\n  gameOverPage(){\n    this.drawGrid();\n    this.ctx.beginPath();\n    this.ctx.fillStyle =\"rgba(255, 255, 255, 0.5)\";\n    this.ctx.fillRect(0,0,400,400);\n    this.ctx.beginPath();\n    this.ctx.font = 'bold 35px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillText('Game Over !', 200, 150);\n    this.ctx.fillText('your score is ' + this.highestScore(), 200, 200);\n    document.getElementsByTagName(\"form\")[0].setAttribute(\"style\", \"display: block\");\n  }\n\n\n\n}\n\n\n\nmodule.exports = Grid;\n","const Grid = require('./grid');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  var myCanvas = document.getElementById('myCanvas');\n  var ctx = myCanvas.getContext(\"2d\");\n  window.scoreArr = [];\n  window.canvasWidth = myCanvas.width;\n  window.canvasHeight = myCanvas.height;\n  let grid = new Grid(ctx);\n  window.grid = grid;\n  window.grid.drawGrid();\n\n  ctx.beginPath();\n  ctx.fillStyle =\"rgba(255, 255, 255, 0.5)\";\n  ctx.fillRect(0,0,400,400);\n\n  start();\n  document.getElementsByTagName(\"button\")[0].addEventListener('click', reset, false);\n  document.getElementsByTagName(\"form\")[0].addEventListener('submit', window.grid.updateFirebase);\n\n  function start(event){\n      window.grid.addRandom();\n      requestAnimationFrame(window.grid.intervalFunction);\n  }\n\n  function reset(){\n    window.grid.resetGrid();\n    window.grid = new Grid(ctx);\n    window.grid.addRandom();\n    requestAnimationFrame(window.grid.intervalFunction);\n  }\n\n  window.start = start;\n\n});\n"],"sourceRoot":""}