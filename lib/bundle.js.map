{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/main.js","webpack:///./lib/grid.js","webpack:///./lib/cell.js","webpack:///./lib/dynamic_cell.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Grid","document","addEventListener","myCanvas","getElementById","ctx","getContext","window","canvasWidth","width","canvasHeight","height","grid","start","event","addRandom","requestAnimationFrame","intervalFunction","drawGrid","beginPath","fillStyle","fillRect","getElementsByTagName","resetGrid","Cell","DynamicCell","[object Object]","this","score","scoreChanging","cellsArray","raf","row","length","column","cellHeight","Math","floor","cellWidth","dynamic_cells","initGrid","onMoving","move","j","keyCode","keyLeft","keyUp","keyRight","keyDown","columnIdx","columnArr","steps","prevCellNum","preEven","prevCellValue","add","push","x","y","rowIdx","rowArr","position","options","random","pos","DyCell","collision","idx","findIndex","cell","targetPos","slice","concat","lineWidth","strokeStyle","rect","stroke","draw","arrU","slideUp","forEach","checkingCollision","removeEventListener","slideDown","slideLeft","slideRight","clearRect","innerHTML","highestScore","gameOver","cancelAnimationFrame","gameOverPage","font","textAlign","fillText","COLOR","2","4","8","16","32","64","128","256","512","1024","2048","4096","8192","16384","32768","endX","endY","xSpeed","ySpeed","abs","updateGrid"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Grid = require('./grid');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  var myCanvas = document.getElementById('myCanvas');\n  var ctx = myCanvas.getContext(\"2d\");\n  window.canvasWidth = myCanvas.width;\n  window.canvasHeight = myCanvas.height;\n  let grid = new Grid(ctx);\n  window.grid = grid;\n  window.grid.drawGrid();\n\n  ctx.beginPath();\n  ctx.fillStyle =\"rgba(255, 255, 255, 0.5)\";\n  ctx.fillRect(0,0,400,400);\n\n  // ctx.beginPath();\n  // ctx.font = 'bold 35px Arial';\n  // ctx.textAlign = 'center';\n  // ctx.fillStyle = 'black';\n  // ctx.fillText(\"press N to start\", 200, 200);\n  start();\n  document.getElementsByTagName(\"button\")[0].addEventListener('click', reset, false);\n  // document.addEventListener('keydown', start, false);\n  function start(event){\n    // if(event.keyCode === 78){\n      window.grid.addRandom();\n      // document.removeEventListener('keydown', start, false);\n      requestAnimationFrame(window.grid.intervalFunction);\n    // }\n  }\n\n  function reset(){\n    window.grid.resetGrid();\n    window.grid = new Grid(ctx);\n    window.grid.addRandom();\n    requestAnimationFrame(window.grid.intervalFunction);\n  }\n\n  window.start = start;\n\n});\n","const Cell = require('./cell');\nconst DynamicCell = require('./dynamic_cell');\n\n\nclass Grid{\n  constructor(ctx){\n    this.score = 0;\n    this.scoreChanging = 0;\n    this.ctx = ctx;\n    this.cellsArray = [\n      [ 0, 0, 0, 0],\n      [ 0, 0, 0, 0],\n      [ 0, 0, 0, 0],\n      [ 0, 0, 0, 0]\n    ];\n    this.raf = null;\n    this.row = this.cellsArray.length;\n    this.column = this.cellsArray[0].length;\n    this.cellHeight = Math.floor(window.canvasHeight/this.row);\n    this.cellWidth = Math.floor(window.canvasWidth/this.column);\n    this.intervalFunction = this.intervalFunction.bind(this);\n    this.dynamic_cells = [];\n    this.initGrid();\n    this.drawGrid();\n    this.onMoving = false;\n    this.move = this.move.bind(this);\n    document.addEventListener('keydown', this.move );\n  }\n\n  initGrid(){\n    for(let i = 0; i < this.row; i++){\n      for(let j = 0; j < this.column; j++){\n        this.cellsArray[i][j] = new Cell(this.ctx, this.cellsArray[i][j], this.cellWidth, this.cellHeight, [i,j], j*this.cellWidth, i*this.cellHeight);\n      }\n    }\n  }\n\n\n  move(event){\n    if(event.keyCode === 37){\n      this.keyLeft();\n    }else if(event.keyCode === 38){\n      this.keyUp();\n    }else if(event.keyCode === 39){\n      this.keyRight();\n    }else if(event.keyCode === 40){\n      this.keyDown();\n    }\n  }\n\n  slideDown(columnIdx, columnArr){\n    let steps = 0;\n    let prevCellNum = 0;\n    let preEven = false;\n    let prevCellValue = null;\n    let add = 0;\n    for(let j = columnArr.length - 1; j >= 0; j--){\n      if(columnArr[j].value===0){\n        steps += 1;\n      }else{\n        if(steps !== 0 || prevCellValue){\n          if(prevCellValue && prevCellValue === columnArr[j].value && !preEven){\n            this.dynamic_cells.push(new DynamicCell(\n              columnArr[j].value,\n              this.ctx,\n              columnArr[j].x,\n              columnArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              columnArr[j + steps + 1 + add].x,\n              columnArr[j + steps + 1 + add].y,\n              !preEven,\n              0,\n              +1,\n              [j + steps + 1 + add, columnIdx]\n            ));\n            preEven = !preEven;\n            if(preEven){add += 1;}\n          }else{\n            this.dynamic_cells.push(new DynamicCell(\n              columnArr[j].value,\n              this.ctx,\n              columnArr[j].x,\n              columnArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              columnArr[j + steps + add].x,\n              columnArr[j + steps + add].y,\n              false,\n              0,\n              +1,\n              [j + steps + add, columnIdx]\n            ));\n            if(preEven){preEven = false;}\n          }\n          prevCellNum += 1;\n          prevCellValue = columnArr[j].value;\n          columnArr[j].value = 0;\n        }else{\n          prevCellNum += 1;\n          prevCellValue = columnArr[j].value;\n        }\n      }\n    }\n    return columnArr;\n  }\n\n\n  slideUp(columnIdx, columnArr){\n    let steps = 0;\n    let prevCellNum = 0;\n    let preEven = false;\n    let prevCellValue = null;\n    let add = 0;\n    for(let j = 0; j< columnArr.length; j++){\n      if(columnArr[j].value===0){\n        steps += 1;\n        }else{\n        if(steps !== 0 || prevCellValue){\n          if(prevCellValue && prevCellValue === columnArr[j].value && !preEven){\n            this.dynamic_cells.push(new DynamicCell(\n              columnArr[j].value,\n              this.ctx,\n              columnArr[j].x,\n              columnArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              columnArr[j-steps - 1 - add].x,\n              columnArr[j-steps - 1 - add].y,\n              !preEven,\n              0,\n              -1,\n              [j-steps -1-add, columnIdx]\n            ));\n            preEven = !preEven;\n            if(preEven){add += 1;}\n          }else{\n            this.dynamic_cells.push(new DynamicCell(\n              columnArr[j].value,\n              this.ctx,\n              columnArr[j].x,\n              columnArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              columnArr[j-steps - add].x,\n              columnArr[j-steps - add].y,\n              false,\n              0,\n              -1,\n              [j-steps -add, columnIdx]\n            ));\n            if(preEven){preEven = false;}\n          }\n          prevCellNum += 1;\n          prevCellValue = columnArr[j].value;\n          columnArr[j].value = 0;\n        }else{\n          prevCellNum += 1;\n          prevCellValue = columnArr[j].value;\n        }\n      }\n    }\n    return columnArr;\n  }\n\n\n\n\n  slideRight(rowIdx, rowArr){\n    let steps = 0;\n    let prevCellNum = 0;\n    let preEven = false;\n    let prevCellValue = null;\n    let add = 0;\n    for(let j = rowArr.length - 1; j >= 0; j--){\n      if(rowArr[j].value===0){\n        steps += 1;\n      }else{\n        if(steps !== 0 || prevCellValue){\n          if(prevCellValue && prevCellValue === rowArr[j].value && !preEven){\n            this.dynamic_cells.push(new DynamicCell(\n              rowArr[j].value,\n              this.ctx,\n              rowArr[j].x,\n              rowArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              rowArr[ j + steps + 1 + add].x,\n              rowArr[ j + steps + 1 + add].y,\n              !preEven,\n              +1,\n              0,\n              [rowIdx, j + steps + 1 + add]\n            ));\n            preEven = !preEven;\n            if(preEven){add += 1;}\n          }else{\n            this.dynamic_cells.push(new DynamicCell(\n              rowArr[j].value,\n              this.ctx,\n              rowArr[j].x,\n              rowArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              rowArr[j+steps+add].x,\n              rowArr[j+steps+add].y,\n              false,\n              +1,\n              0,\n              [rowIdx, j+steps + add]\n            ));\n            if(preEven){preEven = false;}\n          }\n          prevCellNum += 1;\n          prevCellValue = rowArr[j].value;\n          rowArr[j].value = 0;\n        }else{\n          prevCellNum += 1;\n          prevCellValue = rowArr[j].value;\n        }\n      }\n    }\n    return rowArr;\n  }\n\n  slideLeft(rowIdx, rowArr){\n    let steps = 0;\n    let prevCellNum = 0;\n    let preEven = false;\n    let prevCellValue = null;\n    let add = 0;\n    for(let j = 0; j< rowArr.length; j++){\n      if(rowArr[j].value === 0){\n        steps += 1;\n      }else{\n        if(steps !== 0 || prevCellValue){\n          if(prevCellValue && prevCellValue === rowArr[j].value && !preEven){\n            this.dynamic_cells.push(new DynamicCell(\n              rowArr[j].value,\n              this.ctx,\n              rowArr[j].x,\n              rowArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              rowArr[j-steps -1 - add].x,\n              rowArr[j-steps -1 - add].y,\n              !preEven,\n              -1,\n              0,\n              [rowIdx, j-steps -1 - add]\n            ));\n            preEven = !preEven;\n            if(preEven){add += 1;}\n          }else{\n            this.dynamic_cells.push(new DynamicCell(\n              rowArr[j].value,\n              this.ctx,\n              rowArr[j].x,\n              rowArr[j].y,\n              this.cellWidth,\n              this.cellHeight,\n              rowArr[j-steps - add].x,\n              rowArr[j-steps - add].y,\n              false,\n              -1,\n              0,\n              [rowIdx, j - steps - add]\n            ));\n            if(preEven){preEven = false;}\n          }\n          prevCellNum += 1;\n          prevCellValue = rowArr[j].value;\n          rowArr[j].value = 0;\n        }else{\n          prevCellNum += 1;\n          prevCellValue = rowArr[j].value;\n        }\n      }\n    }\n    return rowArr;\n  }\n\n\n\n  addRandom(){\n    document.addEventListener('keydown', this.move );\n    let options = [];\n    for(let i = 0; i < this.row; i++){\n      for(let j = 0; j < this.column; j++){\n        if(this.cellsArray[i][j].value===0){\n          options.push({r: i, c: j});\n        }\n      }\n    }\n    let position;\n    if(options.length > 0){\n      position = options[Math.floor(Math.random() * options.length)];\n    }\n\n    this.cellsArray[position.r][position.c] = Math.random() > 0.5 ?\n      new Cell(this.ctx, 2, this.cellWidth, this.cellHeight, [position.r, position.c], position.c*this.cellWidth, position.r*this.cellHeight) :\n      new Cell(this.ctx, 4, this.cellWidth, this.cellHeight, [position.r, position.c], position.c*this.cellWidth, position.r*this.cellHeight);\n    this.onMoving = false;\n  }\n\n\n  updateGrid(pos, DyCell){\n    if(DyCell.collision){\n      this.cellsArray[pos[0]][pos[1]].value = DyCell.value * 2;\n    }else{\n      this.cellsArray[pos[0]][pos[1]].value = DyCell.value;\n    }\n    const idx = this.dynamic_cells.findIndex(cell => cell.targetPos[0] === pos[0] && cell.targetPos[1] === pos[1]);\n    this.dynamic_cells = this.dynamic_cells.slice(0,idx).concat(this.dynamic_cells.slice(idx + 1));\n  }\n\n\n\n  drawGrid(){\n    for(let i = 0; i < this.row; i++){\n      for(let j = 0; j < this.column; j++){\n        this.ctx.beginPath();\n        this.ctx.lineWidth=\"12\";\n        this.ctx.strokeStyle= \"#010329\";\n        this.ctx.rect(j*this.cellWidth, i*this.cellHeight, this.cellWidth, this.cellHeight);\n        this.ctx.stroke();\n\n        this.cellsArray[i][j].draw();\n      }\n    }\n  }\n\n\n\n  keyUp(){\n    for(let j = 0; j< this.column; j++){\n      let arrU = [this.cellsArray[0][j], this.cellsArray[1][j], this.cellsArray[2][j], this.cellsArray[3][j]];\n      this.slideUp(j, arrU);\n      for(let i = 0; i < this.row; i++){\n        this.cellsArray[i][j] = arrU[i];\n      }\n      // document.removeEventListener('keydown', this.move );\n    }\n    this.dynamic_cells.forEach( cell => {\n      cell.checkingCollision();\n    });\n    if(this.dynamic_cells.length !== 0){\n      this.onMoving = true;\n      document.removeEventListener('keydown', this.move );\n    }\n  }\n\n  keyDown(){\n    for(let j = 0; j< this.column; j++){\n      let arrU = [this.cellsArray[0][j], this.cellsArray[1][j], this.cellsArray[2][j], this.cellsArray[3][j]];\n      this.slideDown(j, arrU);\n      for(let i = 0; i < this.row; i++){\n        this.cellsArray[i][j] = arrU[i];\n      }\n      // document.removeEventListener('keydown', this.move );\n    }\n    this.dynamic_cells.forEach( cell => {\n      cell.checkingCollision();\n    });\n    if(this.dynamic_cells.length !== 0){\n      this.onMoving = true;\n      document.removeEventListener('keydown', this.move );\n    }\n  }\n\n  keyLeft(){\n    for(let i = 0; i< this.row; i++){\n      this.slideLeft(i, this.cellsArray[i]);\n    }\n    this.dynamic_cells.forEach( cell => {\n      cell.checkingCollision();\n    });\n    if(this.dynamic_cells.length !== 0){\n      this.onMoving = true;\n      document.removeEventListener('keydown', this.move );\n    }\n  }\n\n\n  keyRight(){\n    for(let i = 0; i< this.row; i++){\n      this.slideRight(i, this.cellsArray[i]);\n    }\n    this.dynamic_cells.forEach( cell => {\n      cell.checkingCollision();\n    });\n    if(this.dynamic_cells.length !== 0){\n      this.onMoving = true;\n      document.removeEventListener('keydown', this.move );\n    }\n  }\n\n\n\n  gameOver(){\n    for(let i = 0; i < this.row; i++){\n      for(let j = 0; j < this.column; j ++){\n        if(this.cellsArray[i][j].value === 0){\n          return false;\n        }\n        if(i != this.row-1 && this.cellsArray[i][j].value === this.cellsArray[i+1][j].value){\n          return false;\n        }\n        if(j != this.column-1 && this.cellsArray[i][j].value === this.cellsArray[i][j+1].value){\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n\n  intervalFunction(){\n    this.raf = requestAnimationFrame(this.intervalFunction);\n    this.ctx.clearRect(0,0,400,400);\n    this.drawGrid();\n    this.dynamic_cells.forEach( cell => {\n      cell.checkingCollision();\n    });\n    if(this.dynamic_cells.length === 0 && this.onMoving){\n      this.addRandom();\n    }\n    document.getElementsByTagName('span')[0].innerHTML = `<span> score : ${this.highestScore()}</span>`;\n\n    if(this.scoreChanging > 0){\n      document.getElementsByTagName('strong')[0].innerHTML = `<p> + ${this.scoreChanging}</p>`;\n    }\n\n    if(this.gameOver() && this.dynamic_cells.length === 0){\n      document.removeEventListener('keydown', this.move );\n      cancelAnimationFrame(this.raf);\n      this.gameOverPage();\n    }\n  }\n\n  resetGrid(){\n    document.removeEventListener('keydown', this.move );\n    cancelAnimationFrame(this.raf);\n    this.ctx.clearRect(0,0,400,400);\n  }\n\n  highestScore(){\n    const s = this.score;\n    for(let i = 0; i < this.row; i++){\n      for(let j = 0; j < this.column; j++){\n        if(this.cellsArray[i][j].value >= this.score){\n          this.score = this.cellsArray[i][j].value;\n        }\n      }\n    }\n    this.scoreChanging = this.score - s;\n    return this.score;\n  }\n\n  gameOverPage(){\n    this.drawGrid();\n    this.ctx.beginPath();\n    this.ctx.fillStyle =\"rgba(255, 255, 255, 0.5)\";\n    this.ctx.fillRect(0,0,400,400);\n    this.ctx.beginPath();\n    this.ctx.font = 'bold 35px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillText('Game Over !', 200, 170);\n    this.ctx.fillText('your score is ' + this.highestScore(), 200, 220);\n  }\n\n\n\n}\n\n\n\nmodule.exports = Grid;\n","const COLOR = {\n  2 : '#eaf1f4', 4 : '#d1e5f0', 8 : '#b5d7e8', 16 : '#9fcbe1', 32 : '#90c4dd', 64 : '#4c98c6',\n  128 : '#3581b9', 256 : '#2a73b2', 512 : '#144d8a', 1024 : '#164b86', 2048 : '#134984',\n  4096 : '#5106da', 8192 : '#6b23ef', 16384 : '#8549f3', 32768 : '#a37aef'\n};\n\n\n\n\nclass Cell{\n  constructor(ctx, value, width, height, pos, x, y){\n    this.ctx = ctx;\n    this.value = value;\n    this.width = width;\n    this.height = height;\n    this.pos = pos;\n    this.x = x;\n    this.y = y;\n  }\n\n  draw(){\n    if(this.value !== 0){\n      this.ctx.beginPath();\n      this.ctx.fillStyle = COLOR[this.value] ? COLOR[this.value] : '#ff80ff';\n      this.ctx.fillRect(this.x + 6, this.y + 6, this.width - 12, this.height - 12);\n      this.ctx.beginPath();\n      this.ctx.font = 'bold 25pt Courier';\n      this.ctx.fillStyle = 'black';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText(this.value, this.x + this.width / 2, this.y + 12 + this.height / 2);\n    }else{\n      this.ctx.beginPath();\n      this.ctx.fillStyle = 'white';\n      this.ctx.fillRect(this.x + 6, this.y + 6, this.width - 12, this.height - 12);\n      this.ctx.beginPath();\n    }\n  }\n\n\n\n\n\n}\n\nmodule.exports = Cell;\n","const COLOR = {\n  2 : '#eaf1f4', 4 : '#d1e5f0', 8 : '#b5d7e8', 16 : '#9fcbe1', 32 : '#90c4dd', 64 : '#4c98c6',\n  128 : '#3581b9', 256 : '#2a73b2', 512 : '#144d8a', 1024 : '#164b86', 2048 : '#134984',\n  4096 : '#5106da', 8192 : '#6b23ef', 16384 : '#8549f3', 32768 : '#a37aef'\n};\n\n\n\n\nclass DynamicCell{\n\n  constructor(value, ctx, x, y, width, height, endX, endY, collision = false, xSpeed = 0, ySpeed = 0, targetPos){\n    this.value = value;\n    this.ctx = ctx;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.endX = endX;\n    this.endY = endY;\n    this.collision = collision;\n    this.xSpeed = xSpeed * Math.floor(Math.abs(endX-x)/20);\n    this.ySpeed = ySpeed * Math.floor(Math.abs(endY-y)/20);\n    this.targetPos = targetPos;\n  }\n\n  draw(){\n    this.ctx.beginPath();\n    this.ctx.fillStyle = COLOR[this.value] ? COLOR[this.value] : '#ff80ff';\n    this.ctx.fillRect(this.x + 6, this.y + 6, this.width - 12, this.height - 12);\n\n    this.ctx.beginPath();\n    this.ctx.font = 'bold 25pt Courier';\n    this.ctx.fillStyle = 'black';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(this.value, this.x + this.width / 2, this.y + 12 + this.height / 2);\n    this.x += this.xSpeed;\n    this.y += this.ySpeed;\n  }\n\n  checkingCollision(){\n    if(this.x === this.endX && this.y === this.endY){\n      window.grid.updateGrid(this.targetPos, this);\n    }else{\n      this.draw();\n    }\n  }\n\n\n\n}\n\nmodule.exports = DynamicCell;\n"],"sourceRoot":""}